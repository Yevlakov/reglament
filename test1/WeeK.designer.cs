#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace test1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB")]
	public partial class WeekDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertWeek(Week instance);
    partial void UpdateWeek(Week instance);
    partial void DeleteWeek(Week instance);
    #endregion
		
		public WeekDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WeekDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WeekDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WeekDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WeekDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Week> Week
		{
			get
			{
				return this.GetTable<Week>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Week")]
	public partial class Week : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDnum;
		
		private int _ID;
		
		private int _DayID;
		
		private string _Day;
		
		private string _Time;
		
		private string _KindWork;
		
		private string _WorkPlace;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDnumChanging(int value);
    partial void OnIDnumChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDayIDChanging(int value);
    partial void OnDayIDChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnKindWorkChanging(string value);
    partial void OnKindWorkChanged();
    partial void OnWorkPlaceChanging(string value);
    partial void OnWorkPlaceChanged();
    #endregion
		
		public Week()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDnum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDnum
		{
			get
			{
				return this._IDnum;
			}
			set
			{
				if ((this._IDnum != value))
				{
					this.OnIDnumChanging(value);
					this.SendPropertyChanging();
					this._IDnum = value;
					this.SendPropertyChanged("IDnum");
					this.OnIDnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayID", DbType="Int NOT NULL")]
		public int DayID
		{
			get
			{
				return this._DayID;
			}
			set
			{
				if ((this._DayID != value))
				{
					this.OnDayIDChanging(value);
					this.SendPropertyChanging();
					this._DayID = value;
					this.SendPropertyChanged("DayID");
					this.OnDayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindWork", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string KindWork
		{
			get
			{
				return this._KindWork;
			}
			set
			{
				if ((this._KindWork != value))
				{
					this.OnKindWorkChanging(value);
					this.SendPropertyChanging();
					this._KindWork = value;
					this.SendPropertyChanged("KindWork");
					this.OnKindWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPlace", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WorkPlace
		{
			get
			{
				return this._WorkPlace;
			}
			set
			{
				if ((this._WorkPlace != value))
				{
					this.OnWorkPlaceChanging(value);
					this.SendPropertyChanging();
					this._WorkPlace = value;
					this.SendPropertyChanged("WorkPlace");
					this.OnWorkPlaceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
